#! /usr/bin/env python

PACKAGE='cameras'

from dynamic_reconfigure.parameter_generator_catkin import *

RECONFIGURE_CLOSE = 3  # Parameters that need a sensor to be stopped completely when changed
RECONFIGURE_STOP = 1  # Parameters that need a sensor to stop streaming when changed
RECONFIGURE_RUNNING = 0 # Parameters that can be changed while a sensor is streaming

gen = ParameterGenerator()

# @todo verify the detectors, descriptors, matchers, etc. supported!!!
fast = gen.const("FAST", str_t, "FAST", "FAST")
gftt = gen.const("GFTT", str_t, "GFTT", "Good Features To Track")
mser = gen.const("MSER", str_t, "MSER", "Maximal Stable Extremal Regions")
orb = gen.const("ORB", str_t, "ORB", "ORiented BRIEF")
sift = gen.const("SIFT", str_t, "SIFT", "SIFT")
star = gen.const("STAR", str_t, "STAR", "STAR")
surf = gen.const("SURF", str_t, "SURF", "SURF")
detectors = gen.enum([fast, gftt, mser, orb, sift, star, surf],
                     "Feature detectors.")
gen.add("detector", str_t, RECONFIGURE_RUNNING,
        "Feature detector.", "ORB", edit_method = detectors)

descriptors = gen.enum([sift, surf],
                     "Descriptor extractors.")
gen.add("descriptor", str_t, RECONFIGURE_RUNNING,
        "Descriptor extractor.", "SURF", edit_method = descriptors)

brute_force = gen.const("BruteForce", str_t, "BruteForce", "BruteForce")
flann_based = gen.const("FlannBased", str_t, "FlannBased", "FlannBased")
matchers = gen.enum([brute_force, flann_based],
                     "Descriptor matchers.")
gen.add("matcher", str_t, RECONFIGURE_RUNNING,
        "Descriptor matcher.", "FlannBased", edit_method = matchers)

none_filter = gen.const("NoneFilter", str_t, "NoneFilter", "NoneFilter")
cross_check_filter = gen.const("CrossCheckFilter", str_t, "CrossCheckFilter", "CrossCheckFilter")
filters = gen.enum([none_filter, cross_check_filter],
                     "Matcher filters.")
gen.add("filter", str_t, RECONFIGURE_RUNNING,
        "Matcher filter.", "CrossCheckFilter", edit_method = filters)

gen.add("threshold", double_t, RECONFIGURE_RUNNING,
        "RANSAC reprojection threshold.", 1.0, 0.0, 10.0)

exit(gen.generate(PACKAGE, "Homography", "Homography"))

